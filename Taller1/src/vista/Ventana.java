
package vista;

import controlador.Parser;

import exceptions.ParsingException;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;

import java.beans.XMLEncoder;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;

import java.util.HashMap;

import javax.swing.JButton;

import javax.swing.JTextArea;

import modelo.Alumno;

/**
 *
 * @author Mau
 */
public class Ventana
    extends javax.swing.JFrame implements IVista {

    /** Creates new form Ventana */
    public Ventana()
    {

        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setBounds(0,0,screenSize.width*2/3, screenSize.height*2/3);
        this.setMinimumSize(new Dimension(screenSize.width*6/10,screenSize.height*6/10));
        this.zonaErorres.setMinimumSize(new Dimension(zonaErorres.getPreferredSize().width/2,zonaErorres.getPreferredSize().width/2));
        this.jPanelSalida.setMinimumSize(new Dimension(jPanelSalida.getPreferredSize().width/2,jPanelSalida.getPreferredSize().width/2));
        this.jButtonEnviar.setBackground(Color.black);
        this.jButtonEnviar.setFocusPainted(false);
        this.jButtonEnviar.setEnabled(false);           
        setLocationRelativeTo(null);
        jTextAreaSalida.setEditable(false);
        jTextAreaErrores.setEditable(false);
        jTFComandos.requestFocus();
        this.getRootPane().setDefaultButton(jButtonEnviar);
        Parser.setVista(this);
        
        jTextAreaErrores.setWrapStyleWord(true);        
        jTextAreaSalida.setWrapStyleWord(true);

    }

     /**
      * @param texto: el texto a escribir
      * Se encarga de imprimir en la vista informacion sobre el funcionamiento del programa
      * 
      */
    public void imprimirEnConsola(String texto)
    {
        this.jTextAreaSalida.append(texto + "\n");
        this.repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPanelBotonyTextField = new javax.swing.JPanel();
        jPanelBotonyTFAdentro = new javax.swing.JPanel();
        JPanelTF = new javax.swing.JPanel();
        jTFComandos = new javax.swing.JTextField();
        jPanelButton = new javax.swing.JPanel();
        jButtonEnviar = new javax.swing.JButton();
        jPanelSalida = new javax.swing.JPanel();
        jPanelSalidaAdentro = new javax.swing.JPanel();
        jScrollPaneSalida = new javax.swing.JScrollPane();
        jTextAreaSalida = new javax.swing.JTextArea();
        zonaErorres = new javax.swing.JPanel();
        jPanelErroresAdentro = new javax.swing.JPanel();
        jScrollPaneErrores = new javax.swing.JScrollPane();
        jTextAreaErrores = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Almacen Alumnos");

        jPanelBotonyTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Comandos"));
        jPanelBotonyTextField.setLayout(new java.awt.BorderLayout());

        jPanelBotonyTFAdentro.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanelBotonyTFAdentro.setLayout(new java.awt.BorderLayout());

        JPanelTF.setLayout(new java.awt.BorderLayout());

        jTFComandos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTFComandosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFComandosFocusLost(evt);
            }
        });
        jTFComandos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTFComandosKeyReleased(evt);
            }
        });
        JPanelTF.add(jTFComandos, java.awt.BorderLayout.CENTER);

        jPanelBotonyTFAdentro.add(JPanelTF, java.awt.BorderLayout.CENTER);

        jButtonEnviar.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jButtonEnviar.setForeground(new java.awt.Color(15, 147, 74));
        jButtonEnviar.setText("Enviar");
        jButtonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEnviarActionPerformed(evt);
            }
        });
        jButtonEnviar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonEnviarKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelButtonLayout = new javax.swing.GroupLayout(jPanelButton);
        jPanelButton.setLayout(jPanelButtonLayout);
        jPanelButtonLayout.setHorizontalGroup(
            jPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelButtonLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelButtonLayout.setVerticalGroup(
            jPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelButtonLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanelBotonyTFAdentro.add(jPanelButton, java.awt.BorderLayout.EAST);

        jPanelBotonyTextField.add(jPanelBotonyTFAdentro, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(jPanelBotonyTextField, java.awt.BorderLayout.SOUTH);

        jPanelSalida.setBorder(javax.swing.BorderFactory.createTitledBorder("Salida"));
        jPanelSalida.setToolTipText("rucula");
        jPanelSalida.setPreferredSize(new java.awt.Dimension(150, 119));
        jPanelSalida.setLayout(new java.awt.BorderLayout());

        jPanelSalidaAdentro.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanelSalidaAdentro.setLayout(new java.awt.BorderLayout());

        jTextAreaSalida.setColumns(20);
        jTextAreaSalida.setLineWrap(true);
        jTextAreaSalida.setRows(5);
        jScrollPaneSalida.setViewportView(jTextAreaSalida);

        jPanelSalidaAdentro.add(jScrollPaneSalida, java.awt.BorderLayout.CENTER);

        jPanelSalida.add(jPanelSalidaAdentro, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelSalida, java.awt.BorderLayout.CENTER);

        zonaErorres.setBorder(javax.swing.BorderFactory.createTitledBorder("Errores"));
        zonaErorres.setToolTipText("rucula");
        zonaErorres.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        zonaErorres.setPreferredSize(new java.awt.Dimension(400, 119));
        zonaErorres.setLayout(new java.awt.BorderLayout());

        jPanelErroresAdentro.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanelErroresAdentro.setMinimumSize(new java.awt.Dimension(60, 26));
        jPanelErroresAdentro.setLayout(new java.awt.BorderLayout());

        jScrollPaneErrores.setHorizontalScrollBar(null);

        jTextAreaErrores.setColumns(20);
        jTextAreaErrores.setLineWrap(true);
        jTextAreaErrores.setRows(5);
        jScrollPaneErrores.setViewportView(jTextAreaErrores);

        jPanelErroresAdentro.add(jScrollPaneErrores, java.awt.BorderLayout.CENTER);

        zonaErorres.add(jPanelErroresAdentro, java.awt.BorderLayout.CENTER);

        getContentPane().add(zonaErorres, java.awt.BorderLayout.EAST);

        pack();
    }//GEN-END:initComponents

    private void jButtonEnviarActionPerformed(java.awt.event.ActionEvent evt) 
    {//GEN-FIRST:event_jButton1ActionPerformed
        String usrInput = jTFComandos.getText();
        jTextAreaSalida.append(usrInput + "\n");
        try
        {
            Parser.parse(usrInput);
        }
        catch (ParsingException exception)
        {
            jTextAreaErrores.append("\n" + exception.getErrorMessage());
        }
        catch (Exception e)
        {
            jTextAreaErrores.append("\n UNEXPECTED ERROR: " + e.getMessage());
        }

        jTFComandos.setText("");          
        this.jButtonEnviar.setBackground(Color.black);
        this.jButtonEnviar.setFocusPainted(false);
        this.jButtonEnviar.setEnabled(false);
        this.jTFComandos.grabFocus();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonEnviarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonEnviarKeyReleased
      
    }//GEN-LAST:event_jButtonEnviarKeyReleased

    private void jTFComandosKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTFComandosKeyReleased
    {//GEN-HEADEREND:event_jTFComandosKeyReleased
        if (this.jTFComandos
                .getText()
                .equals(""))
        {
            this.jButtonEnviar.setBackground(Color.black);
            this.jButtonEnviar.setFocusPainted(false);
            this.jButtonEnviar.setEnabled(false);
          
        }
        else
        {
            this.jButtonEnviar.setEnabled(true);
            this.jButtonEnviar.setBackground(new JButton().getBackground());
        }
    }//GEN-LAST:event_jTFComandosKeyReleased

    private void jTFComandosFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_jTFComandosFocusGained
    {//GEN-HEADEREND:event_jTFComandosFocusGained
      this.jTFComandos.setText("");
    }//GEN-LAST:event_jTFComandosFocusGained

    private void jTFComandosFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_jTFComandosFocusLost
    {//GEN-HEADEREND:event_jTFComandosFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFComandosFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info: javax.swing
                                                                  .UIManager
                                                                  .getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util
                .logging
                .Logger
                .getLogger(Ventana.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util
                .logging
                .Logger
                .getLogger(Ventana.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util
                .logging
                .Logger
                .getLogger(Ventana.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util
                .logging
                .Logger
                .getLogger(Ventana.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
            .EventQueue
            .invokeLater(new Runnable()
            {
                public void run()
                {
                    new Ventana().setVisible(true);
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanelTF;
    private javax.swing.JButton jButtonEnviar;
    private javax.swing.JPanel jPanelBotonyTFAdentro;
    private javax.swing.JPanel jPanelBotonyTextField;
    private javax.swing.JPanel jPanelButton;
    private javax.swing.JPanel jPanelErroresAdentro;
    private javax.swing.JPanel jPanelSalida;
    private javax.swing.JPanel jPanelSalidaAdentro;
    private javax.swing.JScrollPane jScrollPaneErrores;
    private javax.swing.JScrollPane jScrollPaneSalida;
    private javax.swing.JTextField jTFComandos;
    private javax.swing.JTextArea jTextAreaErrores;
    private javax.swing.JTextArea jTextAreaSalida;
    private javax.swing.JPanel zonaErorres;
    // End of variables declaration//GEN-END:variables

}
